import { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Separator } from "@/components/ui/separator";
import { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';

const Dashboard = () => {
  const [activeTab, setActiveTab] = useState("OVERVIEW");
  const [marketplaceFilter, setMarketplaceFilter] = useState("ALL");

  const navigationItems = [
    { id: "OVERVIEW", label: "OVERVIEW", icon: "✦" },
    { id: "MY_ASSETS", label: "MY ASSETS", icon: "⊞" },
    { id: "MARKETPLACE", label: "MARKETPLACE", icon: "🏪" },
    { id: "CATEGORIES", label: "CATEGORIES", icon: "◈" },
    { id: "STAKE", label: "STAKE", icon: "⚙" },
    { id: "CONTACT", label: "CONTACT", icon: "@" },
  ];

  const stats = [
    { label: "TOTAL TOKEN SUPPLY", value: "100,000,000 PIN", icon: "?" },
    { label: "TOTAL ASSETS", value: "217", icon: "?" },
    { label: "TOTAL HASHRATE", value: "98,916,473 GH/s", icon: "?" },
    { label: "TOTAL FRACTIONS", value: "8,255", icon: "?" },
  ];

  // Chart data for staking growth
  const stakingData = [
    { month: 'Jan', staked: 5.2, value: 5200000 },
    { month: 'Feb', staked: 8.7, value: 8700000 },
    { month: 'Mar', staked: 12.4, value: 12400000 },
    { month: 'Apr', staked: 15.8, value: 15800000 },
    { month: 'May', staked: 18.9, value: 18900000 },
    { month: 'Jun', staked: 20.28, value: 20280000 },
  ];

  const CustomTooltip = ({ active, payload, label }: any) => {
    if (active && payload && payload.length) {
      return (
        <div className="bg-gray-900 border border-gray-700 rounded-lg p-3 shadow-lg">
          <p className="text-gray-400 text-xs uppercase tracking-wider mb-1">{`${label}`}</p>
          <p className="text-primary font-bold">
            {`${payload[0].value.toFixed(2)}M PIN`}
          </p>
          <p className="text-xs text-gray-500">
            {`$${(payload[0].payload.value * 0.76).toLocaleString()}`}
          </p>
        </div>
      );
    }
    return null;
  };

  return (
    <div className="min-h-screen bg-black text-white font-mono">
      {/* Header */}
      <header className="border-b border-gray-800 p-6">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-2">
            <div className="w-6 h-6 bg-primary rounded-sm flex items-center justify-center">
              <span className="text-black font-bold text-sm">⚡</span>
            </div>
            <span className="text-xl font-bold">PinLink</span>
          </div>
          <div className="text-primary text-sm">
            [0X2C7E...CEBAa]
          </div>
        </div>
      </header>

      {/* Navigation Bar */}
      <nav className="border-b border-gray-800">
        <div className="flex items-center px-6 gap-2">
          {navigationItems.map((item) => (
            <button
              key={item.id}
              onClick={() => setActiveTab(item.id)}
              className={`flex items-center gap-2 px-6 py-4 text-base font-medium transition-colors border-b-2 ${
                activeTab === item.id
                  ? "border-primary text-primary"
                  : "border-transparent text-gray-400 hover:text-white"
              }`}
            >
              <span>{item.icon}</span>
              {item.label}
            </button>
          ))}
          <div className="ml-auto">
            <span className="bg-blue-600 text-blue-100 px-2 py-1 rounded text-xs">
              🪙 NEW USDC
            </span>
          </div>
        </div>
      </nav>

      {/* Main Content */}
      <main className="p-6">
        {activeTab === "OVERVIEW" && (
          <div className="space-y-16 py-8">
            {/* Total Generated Section */}
            <div className="text-center space-y-8 py-16">
              <p className="text-primary text-sm mb-4 uppercase tracking-wider font-mono">
                Total Generated by PinLink
              </p>
              <div className="text-8xl font-bold mb-6 leading-none">$1,626,050</div>
              <div className="flex items-center justify-center gap-6 text-lg">
                <span className="text-muted-foreground">1 SPIN = $0.76 USD</span>
                <span className="flex items-center gap-2 text-primary">
                  <span className="w-2 h-2 bg-primary rounded-full"></span>
                  0.7% TODAY
                </span>
              </div>
            </div>

            <Separator className="bg-gray-800 my-16" />

            {/* Stats Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 py-8">
              {stats.map((stat, index) => (
                <div key={index} className="space-y-6">
                  <div className="flex items-center gap-2 text-gray-400 text-sm uppercase tracking-wider font-mono">
                    {stat.label}
                    <span className="text-xs opacity-50">{stat.icon}</span>
                  </div>
                  <div className="text-2xl font-bold text-white">{stat.value}</div>
                </div>
              ))}
            </div>
          </div>
        )}

        {activeTab === "MY_ASSETS" && (
          <div className="space-y-8">
            {/* Assets Header */}
            <div>
              <div className="text-4xl font-bold mb-4">
                <span className="text-primary">[0]</span> assets
              </div>
              <div className="flex items-center gap-4 text-sm">
                <div className="flex items-center gap-2">
                  <span className="w-2 h-2 bg-primary rounded-full"></span>
                  <span>25% P&L</span>
                </div>
                <span className="text-gray-400">0 SPIN</span>
              </div>
            </div>

            <Separator className="bg-gray-800" />

            {/* Sub Navigation */}
            <div className="flex items-center gap-8 border-b border-gray-800">
              <button className="pb-4 border-b-2 border-primary text-primary text-sm uppercase tracking-wider">
                MY DEVICES [0]
              </button>
              <button className="pb-4 border-b-2 border-transparent text-gray-400 text-sm uppercase tracking-wider hover:text-white">
                MY LISTINGS [0]
              </button>
              <button className="pb-4 border-b-2 border-transparent text-gray-400 text-sm uppercase tracking-wider hover:text-white">
                HISTORY [0]
              </button>
            </div>

            {/* No Assets Content */}
            <div className="flex flex-col items-center justify-center py-24 space-y-4">
              <div className="w-16 h-16 border-2 border-dashed border-gray-600 rounded-lg flex items-center justify-center">
                <span className="text-gray-600 text-2xl">✕</span>
              </div>
              <div className="text-center">
                <h3 className="text-xl font-bold mb-2">No Assets</h3>
                <button className="text-primary hover:underline">
                  Explore Marketplace [+]
                </button>
              </div>
            </div>
          </div>
        )}

        {activeTab === "MARKETPLACE" && (
          <div className="space-y-8">
            {/* Marketplace Header */}
            <div className="flex items-start justify-between">
              <div className="space-y-4">
                <h2 className="text-4xl font-bold">
                  {marketplaceFilter === "MINERS" ? "Tokenize your DePIN Assets" : 
                   marketplaceFilter === "NODES" ? "Tokenize your DePIN Assets" : 
                   "Explore a Range of Assets"}
                </h2>
                <p className="text-gray-400 max-w-md">
                  {marketplaceFilter === "MINERS" ? "Tokenize Your Assets with PinLink, tokenizing your DePIN assets has never been easier. Our user-friendly platform allows you to tokenize your assets with just a few clicks, unlocking new possibilities for liquidity and investment." :
                   marketplaceFilter === "NODES" ? "Tokenize Your Assets with PinLink, tokenizing your DePIN assets has never been easier. Our user-friendly platform allows you to tokenize your assets with just a few clicks, unlocking new possibilities for liquidity and investment." :
                   "From GPUs and nodes to storage and computing power, our marketplace offers a diverse array of DePIN assets for you to explore and rent."}
                </p>
                <button className="text-primary hover:underline text-sm">
                  [Learn more]
                </button>
              </div>
              <div className="w-64 h-32 bg-gray-800 rounded-lg flex items-center justify-center">
                <span className="text-gray-500">Asset Image</span>
              </div>
            </div>

            {/* Filters */}
            <div className="flex items-center justify-between text-sm">
              <div className="flex items-center gap-2">
                <button 
                  onClick={() => setMarketplaceFilter("MINERS")}
                  className={`px-3 py-1 rounded transition-colors ${
                    marketplaceFilter === "MINERS" ? "bg-primary text-black" : "bg-gray-700 hover:bg-gray-600"
                  }`}
                >
                  ⚙ Miner: 84
                </button>
                <button 
                  onClick={() => setMarketplaceFilter("NODES")}
                  className={`px-3 py-1 rounded transition-colors ${
                    marketplaceFilter === "NODES" ? "bg-primary text-black" : "bg-gray-700 hover:bg-gray-600"
                  }`}
                >
                  ✅ Node: 1
                </button>
                <button 
                  onClick={() => setMarketplaceFilter("USDC")}
                  className={`px-3 py-1 rounded transition-colors ${
                    marketplaceFilter === "USDC" ? "bg-primary text-black" : "bg-blue-600 text-blue-100 hover:bg-blue-500"
                  }`}
                >
                  💰 USDC: 17
                </button>
                <span className="bg-gray-700 px-3 py-1 rounded">🤖 AI Agents (coming soon)</span>
              </div>
              <div className="flex items-center gap-4">
                <span className="text-gray-400">☰ Filter by token ID or address</span>
                <div className="flex items-center gap-2">
                  <button className="p-1">≡</button>
                  <button className="p-1">⊞</button>
                </div>
              </div>
            </div>

            {/* Content based on filter */}
            {marketplaceFilter === "USDC" && (
              <div className="space-y-4">
                <div className="grid grid-cols-7 gap-4 text-xs uppercase tracking-wider text-gray-400 pb-4 border-b border-gray-800">
                  <span>ITEM</span>
                  <span>PRICE</span>
                  <span>FRACTIONS</span>
                  <span>APR</span>
                  <span>CATEGORY</span>
                  <span>VENDOR</span>
                  <span>ACTIONS</span>
                </div>
                
                {[
                  { name: "Avalon Q", price: "$17.34 USD", fractions: "1/100", apr: "0%", vendor: "CANAAN", category: "Miner" },
                  { name: "Avalon Q", price: "$17.49 USD", fractions: "76/100", apr: "0%", vendor: "CANAAN", category: "Miner" },
                  { name: "Avalon Q", price: "$18.38 USD", fractions: "2/100", apr: "0%", vendor: "CANAAN", category: "Miner" },
                  { name: "Antminer S21 XP", price: "$2,142 USD", fractions: "993/1000", apr: "0%", vendor: "BITMAIN", category: "Miner", warning: "⚠️ Warning: Up" },
                  { name: "Avalon Q", price: "$17.49 USD", fractions: "100/100", apr: "0%", vendor: "CANAAN", category: "Miner" },
                  { name: "Avalon Q", price: "$17.49 USD", fractions: "100/100", apr: "0%", vendor: "CANAAN", category: "Miner" },
                  { name: "Avalon Q", price: "$17.49 USD", fractions: "100/100", apr: "0%", vendor: "CANAAN", category: "Miner" },
                  { name: "Antminer S21 Pro", price: "$45.9 USD", fractions: "4/100", apr: "54.77%", vendor: "BITMAIN", category: "Miner" },
                  { name: "Antminer S21 Pro", price: "$45.9 USD", fractions: "42/100", apr: "54.77%", vendor: "BITMAIN", category: "Miner" },
                  { name: "Avalon Q", price: "$17.49 USD", fractions: "100/100", apr: "0%", vendor: "CANAAN", category: "Miner" },
                  { name: "Antminer S21 Pro", price: "$45.9 USD", fractions: "19/100", apr: "54.77%", vendor: "BITMAIN", category: "Miner" },
                  { name: "Avalon Q", price: "$17.49 USD", fractions: "100/100", apr: "0%", vendor: "CANAAN", category: "Miner" },
                  { name: "Avalon Q", price: "$17.49 USD", fractions: "62/100", apr: "0%", vendor: "CANAAN", category: "Miner" },
                  { name: "Antminer S21 Pro", price: "$45.9 USD", fractions: "83/100", apr: "54.77%", vendor: "BITMAIN", category: "Miner" },
                  { name: "Avalon Q", price: "$17.49 USD", fractions: "100/100", apr: "0%", vendor: "CANAAN", category: "Miner" },
                  { name: "Avalon Q", price: "$17.49 USD", fractions: "82/100", apr: "0%", vendor: "CANAAN", category: "Miner" },
                  { name: "Antminer S21 Pro", price: "$45.9 USD", fractions: "74/100", apr: "54.77%", vendor: "BITMAIN", category: "Miner" },
                ].map((item, index) => (
                  <div key={index} className="grid grid-cols-7 gap-4 items-center py-3 border-b border-gray-800 hover:bg-gray-900/50">
                    <div className="flex items-center gap-2">
                      <div className="w-8 h-8 bg-gray-700 rounded flex items-center justify-center">
                        <span className="text-xs">⚙</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <div className="font-mono">{item.name}</div>
                        <div className="flex gap-1">
                          <span className="w-3 h-3 bg-blue-600 rounded-full"></span>
                          <span className="w-3 h-3 bg-blue-400 rounded-full"></span>
                        </div>
                        {item.warning && (
                          <div className="text-xs text-yellow-500">{item.warning}</div>
                        )}
                      </div>
                    </div>
                    <span className="font-mono">{item.price}</span>
                    <span className="font-mono">{item.fractions}</span>
                    <span className="font-mono">{item.apr}</span>
                    <span className="text-gray-400">{item.category}</span>
                    <span className="text-gray-400">{item.vendor}</span>
                    <button className="bg-primary text-black px-3 py-1 rounded text-xs hover:bg-primary/80">
                      [BUY]
                    </button>
                  </div>
                ))}
              </div>
            )}

            {marketplaceFilter === "MINERS" && (
              <div className="space-y-4">
                <div className="grid grid-cols-7 gap-4 text-xs uppercase tracking-wider text-gray-400 pb-4 border-b border-gray-800">
                  <span>ITEM</span>
                  <span>PRICE</span>
                  <span>FRACTIONS</span>
                  <span>APR</span>
                  <span>CATEGORY</span>
                  <span>VENDOR</span>
                  <span>ACTIONS</span>
                </div>
                
                {[
                  { name: "Avalon Q", price: "$17.49 USD", fractions: "81/100", apr: "0%", vendor: "CANAAN", category: "Miner" },
                  { name: "Antminer S21 XP", price: "$2,142 USD", fractions: "983/1000", apr: "0%", vendor: "BITMAIN", category: "Miner", warning: "⚠️ Warning: Up" },
                  { name: "Avalon Q", price: "$17.49 USD", fractions: "100/100", apr: "0%", vendor: "CANAAN", category: "Miner" },
                  { name: "Antminer S21 Pro", price: "$45.9 USD", fractions: "5/100", apr: "53.99%", vendor: "BITMAIN", category: "Miner" },
                  { name: "WhatsMiner M30S", price: "$120.5 USD", fractions: "45/100", apr: "12.5%", vendor: "MICROBT", category: "Miner" },
                  { name: "Avalon A1246", price: "$89.99 USD", fractions: "67/100", apr: "8.75%", vendor: "CANAAN", category: "Miner" },
                  { name: "Antminer S19 Pro", price: "$1,850 USD", fractions: "892/1000", apr: "15.2%", vendor: "BITMAIN", category: "Miner" },
                  { name: "WhatsMiner M31S", price: "$95.30 USD", fractions: "23/100", apr: "9.45%", vendor: "MICROBT", category: "Miner" },
                ].map((item, index) => (
                  <div key={index} className="grid grid-cols-7 gap-4 items-center py-3 border-b border-gray-800 hover:bg-gray-900/50">
                    <div className="flex items-center gap-2">
                      <div className="w-8 h-8 bg-gray-700 rounded flex items-center justify-center">
                        <span className="text-xs">⚙</span>
                      </div>
                      <div>
                        <div className="font-mono">{item.name}</div>
                        {item.warning && (
                          <div className="text-xs text-yellow-500">{item.warning}</div>
                        )}
                      </div>
                    </div>
                    <span className="font-mono">{item.price}</span>
                    <span className="font-mono">{item.fractions}</span>
                    <span className="font-mono">{item.apr}</span>
                    <span className="text-gray-400">{item.category}</span>
                    <span className="text-gray-400">{item.vendor}</span>
                    <button className="bg-primary text-black px-3 py-1 rounded text-xs hover:bg-primary/80">
                      [BUY]
                    </button>
                  </div>
                ))}
              </div>
            )}

            {marketplaceFilter === "NODES" && (
              <div className="space-y-4">
                <div className="grid grid-cols-7 gap-4 text-xs uppercase tracking-wider text-gray-400 pb-4 border-b border-gray-800">
                  <span>ITEM</span>
                  <span>PRICE</span>
                  <span>FRACTIONS</span>
                  <span>APR</span>
                  <span>CATEGORY</span>
                  <span>VENDOR</span>
                  <span>ACTIONS</span>
                </div>
                
                <div className="grid grid-cols-7 gap-4 items-center py-3 border-b border-gray-800 hover:bg-gray-900/50">
                  <div className="flex items-center gap-2">
                    <div className="w-8 h-8 bg-gray-700 rounded flex items-center justify-center">
                      <span className="text-xs">✅</span>
                    </div>
                    <div>
                      <div className="font-mono">Validator Node</div>
                    </div>
                  </div>
                  <span className="font-mono">$40.8 USD <br/><span className="text-xs text-gray-400">(46.83 PIN)</span></span>
                  <span className="font-mono">6/100</span>
                  <span className="font-mono">25.57%</span>
                  <span className="text-gray-400">Node</span>
                  <span className="text-gray-400">OASIS</span>
                  <button className="bg-primary text-black px-3 py-1 rounded text-xs hover:bg-primary/80">
                    [BUY]
                  </button>
                </div>
              </div>
            )}

            {marketplaceFilter === "ALL" && (
              <div className="space-y-4">
                <div className="grid grid-cols-7 gap-4 text-xs uppercase tracking-wider text-gray-400 pb-4 border-b border-gray-800">
                  <span>ITEM</span>
                  <span>PRICE</span>
                  <span>FRACTIONS</span>
                  <span>APR</span>
                  <span>CATEGORY</span>
                  <span>VENDOR</span>
                  <span>ACTIONS</span>
                </div>
                
                {[
                  { name: "Avalon Q", price: "$17.49 USD", fractions: "81/100", apr: "0%", vendor: "CANAAN", category: "Miner", icon: "⚙" },
                  { name: "Validator Node", price: "$40.8 USD", fractions: "6/100", apr: "25.57%", vendor: "OASIS", category: "Node", icon: "✅" },
                  { name: "Antminer S21 XP", price: "$2,142 USD", fractions: "983/1000", apr: "0%", vendor: "BITMAIN", category: "Miner", icon: "⚙", warning: "⚠️ Warning: Up" },
                  { name: "Antminer S21 Pro", price: "$45.9 USD", fractions: "5/100", apr: "53.99%", vendor: "BITMAIN", category: "Miner", icon: "⚙" },
                ].map((item, index) => (
                  <div key={index} className="grid grid-cols-7 gap-4 items-center py-3 border-b border-gray-800 hover:bg-gray-900/50">
                    <div className="flex items-center gap-2">
                      <div className="w-8 h-8 bg-gray-700 rounded flex items-center justify-center">
                        <span className="text-xs">{item.icon}</span>
                      </div>
                      <div>
                        <div className="font-mono">{item.name}</div>
                        {item.warning && (
                          <div className="text-xs text-yellow-500">{item.warning}</div>
                        )}
                      </div>
                    </div>
                    <span className="font-mono">{item.price}</span>
                    <span className="font-mono">{item.fractions}</span>
                    <span className="font-mono">{item.apr}</span>
                    <span className="text-gray-400">{item.category}</span>
                    <span className="text-gray-400">{item.vendor}</span>
                    <button className="bg-primary text-black px-3 py-1 rounded text-xs hover:bg-primary/80">
                      [BUY]
                    </button>
                  </div>
                ))}
              </div>
            )}
          </div>
        )}

        {activeTab === "CATEGORIES" && (
          <div className="space-y-8">
            {/* Categories Header */}
            <div>
              <h2 className="text-4xl font-bold mb-4">
                <span className="text-primary">[6]</span> categories are currently<br />
                available for a total of <span className="text-primary">[217 assets]</span>
              </h2>
            </div>

            {/* Categories Grid */}
            <div className="grid grid-cols-2 gap-8 max-w-5xl mx-auto w-full">
              <Card 
                className="bg-black border-gray-800 p-8 hover:border-primary transition-colors cursor-pointer h-48 max-w-sm"
                onClick={() => {
                  setActiveTab("MARKETPLACE");
                  setMarketplaceFilter("MINERS");
                }}
              >
                <div className="flex items-center justify-between h-full">
                  <div>
                    <h3 className="text-2xl font-bold mb-2">Miners</h3>
                    <p className="text-primary text-sm">216 assets</p>
                  </div>
                  <img 
                    src="/lovable-uploads/25bce48f-a381-46aa-b4af-f05aed7373fc.png" 
                    alt="Miners Category"
                    className="w-28 h-28 object-contain"
                  />
                </div>
              </Card>

              <Card 
                className="bg-black border-gray-800 p-8 hover:border-primary transition-colors cursor-pointer h-48 max-w-sm"
                onClick={() => {
                  setActiveTab("MARKETPLACE");
                  setMarketplaceFilter("NODES");
                }}
              >
                <div className="flex items-center justify-between h-full">
                  <div>
                    <h3 className="text-2xl font-bold mb-2">Nodes</h3>
                    <p className="text-primary text-sm">1 assets</p>
                  </div>
                  <img 
                    src="/lovable-uploads/0c578681-5e91-42a6-a1b2-e51c9afd9fb9.png" 
                    alt="Nodes Category"
                    className="w-28 h-28 object-contain"
                  />
                </div>
              </Card>

              <Card className="bg-black border-gray-800 p-8 hover:border-primary transition-colors h-48 max-w-sm">
                <div className="flex items-center justify-between h-full">
                  <div>
                    <h3 className="text-2xl font-bold mb-2">GPU</h3>
                    <p className="text-gray-400 text-sm">Coming soon</p>
                  </div>
                  <img 
                    src="/lovable-uploads/4cce5443-580d-4898-8c8f-073132dfee36.png" 
                    alt="GPU Category"
                    className="w-28 h-28 object-contain"
                  />
                </div>
              </Card>

              <Card className="bg-black border-gray-800 p-8 hover:border-primary transition-colors h-48 max-w-sm">
                <div className="flex items-center justify-between h-full">
                  <div>
                    <h3 className="text-2xl font-bold mb-2">Computing</h3>
                    <p className="text-gray-400 text-sm">Coming soon</p>
                  </div>
                  <img 
                    src="/lovable-uploads/e51ef33a-e0c8-4fcc-acba-a87845cf7cc4.png" 
                    alt="Computing Category"
                    className="w-28 h-28 object-contain"
                  />
                </div>
              </Card>

              <Card className="bg-black border-gray-800 p-8 hover:border-primary transition-colors h-48 max-w-sm">
                <div className="flex items-center justify-between h-full">
                  <div>
                    <h3 className="text-2xl font-bold mb-2">Storage</h3>
                    <p className="text-gray-400 text-sm">Coming soon</p>
                  </div>
                  <img 
                    src="/lovable-uploads/7428a7fc-a8b9-4ce9-b916-e96d3065adac.png" 
                    alt="Storage Category"
                    className="w-28 h-28 object-contain"
                  />
                </div>
              </Card>

              <Card className="bg-black border-gray-800 p-8 hover:border-primary transition-colors h-48 max-w-sm">
                <div className="flex items-center justify-between h-full">
                  <div>
                    <h3 className="text-2xl font-bold mb-2">Network</h3>
                    <p className="text-gray-400 text-sm">Coming soon</p>
                  </div>
                  <img 
                    src="/lovable-uploads/11ef7414-a6e3-43a9-a695-c0620cdb5fd9.png" 
                    alt="Network Category"
                    className="w-28 h-28 object-contain"
                  />
                </div>
              </Card>
            </div>
          </div>
        )}

        {activeTab === "STAKE" && (
          <div className="grid grid-cols-[2fr_5fr] gap-12">
            {/* Left Side - Staking Interface */}
            <div className="space-y-8">
              <div>
                <h2 className="text-4xl font-bold mb-4">Stake</h2>
                <p className="text-gray-400">
                  Participate in securing the PinLink Ecosystem, earn platform fees and staking rewards.
                </p>
              </div>

              {/* Stake/Unstake Tabs */}
              <div className="flex items-center gap-8 border-b border-gray-800">
                <button className="pb-4 border-b-2 border-primary text-primary text-sm uppercase tracking-wider">
                  STAKE
                </button>
                <button className="pb-4 border-b-2 border-transparent text-gray-400 text-sm uppercase tracking-wider hover:text-white">
                  UNSTAKE
                </button>
                <button className="pb-4 border-b-2 border-transparent text-gray-400 text-sm uppercase tracking-wider hover:text-white">
                  WITHDRAW
                </button>
              </div>

              {/* Staking Form */}
              <div className="space-y-6">
                <div className="flex items-center justify-between bg-black p-4 rounded-lg border border-gray-800">
                  <div className="flex items-center gap-2">
                    <span className="w-6 h-6 bg-primary rounded flex items-center justify-center">
                      <span className="text-black text-xs">⚡</span>
                    </span>
                    <span>0</span>
                  </div>
                  <div className="text-right">
                    <div className="text-sm text-gray-400">SPIN MAX</div>
                  </div>
                </div>

                <div className="space-y-2">
                  <div className="text-sm text-gray-400">APY</div>
                  <div className="text-2xl font-bold text-primary">24.65%</div>
                </div>

                <div className="space-y-2">
                  <div className="text-sm text-gray-400">RECEIVED</div>
                  <div className="text-lg font-bold">0 SPIN</div>
                </div>

                <Button className="w-full bg-primary text-black hover:bg-primary/80">
                  APPROVE
                </Button>
              </div>
            </div>

            {/* Right Side - Stats and Chart */}
            <div className="space-y-8">
              {/* SPIN Price */}
              <div>
                <div className="text-sm text-gray-400 mb-2">SPIN</div>
                <div className="text-4xl font-bold text-primary mb-2">$ 0.76</div>
                <div className="flex items-center gap-2 text-sm">
                  <span className="w-2 h-2 bg-primary rounded-full"></span>
                  <span className="text-primary">0.7% TODAY</span>
                </div>
              </div>

              {/* Stats Grid */}
              <div className="grid grid-cols-2 gap-6">
                <div>
                  <div className="text-xs text-gray-400 uppercase tracking-wider mb-1">MARKET CAP</div>
                  <div className="text-lg font-bold">76.06M</div>
                </div>
                <div>
                  <div className="text-xs text-gray-400 uppercase tracking-wider mb-1">TVL</div>
                  <div className="text-lg font-bold text-primary">28.63M</div>
                </div>
                <div>
                  <div className="text-xs text-gray-400 uppercase tracking-wider mb-1">TOTAL STAKED</div>
                  <div className="text-lg font-bold">20.28M</div>
                </div>
                <div>
                  <div className="text-xs text-gray-400 uppercase tracking-wider mb-1">SUPPLY STAKED</div>
                  <div className="text-lg font-bold">20.3%</div>
                </div>
              </div>

              {/* Staking Status */}
              <div className="grid grid-cols-3 gap-6">
                <div>
                  <div className="text-xs text-gray-400 uppercase tracking-wider mb-1">STAKED</div>
                  <div className="text-lg font-bold">0</div>
                </div>
                <div>
                  <div className="text-xs text-gray-400 uppercase tracking-wider mb-1">LOCKED</div>
                  <div className="text-lg font-bold">0</div>
                </div>
                <div>
                  <div className="text-xs text-gray-400 uppercase tracking-wider mb-1">UNSTAKED</div>
                  <div className="text-lg font-bold">0</div>
                </div>
              </div>

              {/* Chart Area */}
              <div className="bg-black p-6 rounded-lg border border-gray-800">
                <div className="text-sm text-gray-400 mb-4 uppercase tracking-wider">TOTAL AMOUNT OF PIN STAKED OVER TIME</div>
                <div className="h-64">
                  <ResponsiveContainer width="100%" height="100%">
                    <AreaChart data={stakingData} margin={{ top: 5, right: 5, left: 5, bottom: 5 }}>
                      <defs>
                        <linearGradient id="stakingGradient" x1="0" y1="0" x2="0" y2="1">
                          <stop offset="5%" stopColor="hsl(var(--primary))" stopOpacity={0.8}/>
                          <stop offset="95%" stopColor="hsl(var(--primary))" stopOpacity={0.1}/>
                        </linearGradient>
                      </defs>
                      <CartesianGrid strokeDasharray="3 3" stroke="#374151" opacity={0.3} />
                      <XAxis 
                        dataKey="month" 
                        axisLine={false}
                        tickLine={false}
                        tick={{ fill: '#9CA3AF', fontSize: 12 }}
                      />
                      <YAxis 
                        axisLine={false}
                        tickLine={false}
                        tick={{ fill: '#9CA3AF', fontSize: 12 }}
                        tickFormatter={(value) => `${value}M`}
                      />
                      <Tooltip content={<CustomTooltip />} />
                      <Area
                        type="monotone"
                        dataKey="staked"
                        stroke="hsl(var(--primary))"
                        strokeWidth={2}
                        fill="url(#stakingGradient)"
                        dot={{ fill: "hsl(var(--primary))", strokeWidth: 2, r: 4 }}
                        activeDot={{ r: 6, stroke: "hsl(var(--primary))", strokeWidth: 2, fill: "#000" }}
                      />
                    </AreaChart>
                  </ResponsiveContainer>
                </div>
              </div>

              {/* Staking Info */}
              <div className="bg-black p-6 rounded-lg border border-gray-800">
                <h3 className="text-lg font-bold mb-2">STAKING</h3>
                <p className="text-sm text-gray-400">
                  By definition, staking is a crypto process that allows network participants to earn 
                  rewards by locking their coins in wallets. These coins are then used to validate 
                  network transactions or as a liquidity source. Staking is applied in networks based 
                  on the Proof of Stake (PoS) consensus algorithm.
                </p>
              </div>
            </div>
          </div>
        )}

        {activeTab === "CONTACT" && (
          <div className="grid grid-cols-[2fr_5fr] gap-12">
            {/* Left Side - Contact Info */}
            <div className="space-y-8">
              <div>
                <h2 className="text-4xl font-bold mb-4">Contact</h2>
                <p className="text-gray-400 mb-8">
                  Ready to invest in RWA assets or questions about DePin? It starts here. Get in touch to start a conversation.
                </p>
              </div>

              <div className="space-y-4">
                <p className="text-gray-400">
                  If you're not a form person, feel free to send us an email directly at:
                </p>
                <a href="mailto:hello@pinlink.ai" className="text-primary hover:underline">
                  hello@pinlink.ai
                </a>
              </div>
            </div>

            {/* Right Side - Contact Form */}
            <div className="space-y-6">
              <div>
                <label className="block text-sm text-gray-400 mb-2">Name</label>
                <input 
                  type="text" 
                  className="w-full bg-black border border-gray-700 rounded-lg p-3 text-white focus:outline-none focus:border-primary"
                />
              </div>

              <div>
                <label className="block text-sm text-gray-400 mb-2">X Account</label>
                <input 
                  type="text" 
                  placeholder="@you"
                  className="w-full bg-black border border-gray-700 rounded-lg p-3 text-white focus:outline-none focus:border-primary"
                />
              </div>

              <div>
                <label className="block text-sm text-gray-400 mb-2">Email</label>
                <input 
                  type="email" 
                  placeholder="you@mail.co"
                  className="w-full bg-black border border-gray-700 rounded-lg p-3 text-white focus:outline-none focus:border-primary"
                />
              </div>

              <div>
                <label className="block text-sm text-gray-400 mb-2">Description</label>
                <textarea 
                  placeholder="Tell us more..."
                  rows={6}
                  className="w-full bg-black border border-gray-700 rounded-lg p-3 text-white focus:outline-none focus:border-primary resize-none"
                />
              </div>

              <div className="flex items-center gap-4">
                <div className="flex-1">
                  <div className="bg-gray-800 p-4 rounded-lg text-center">
                    <span className="text-gray-400">reCAPTCHA placeholder</span>
                  </div>
                </div>
                <Button className="bg-primary text-black hover:bg-primary/80 px-8">
                  SEND
                </Button>
              </div>
            </div>
          </div>
        )}
      </main>

      {/* Footer */}
      <footer className="border-t border-gray-800 p-6 mt-auto">
        <div className="flex items-center justify-between text-sm text-gray-400">
          <div className="flex items-center gap-4">
            <span>2024 PinLink -- All Rights Reserved</span>
            <span className="flex items-center gap-1">
              <span className="w-2 h-2 bg-primary rounded-full"></span>
              All Systems [running]
            </span>
          </div>
          <div className="flex items-center gap-2">
            <span>Proofed by hacken</span>
            <div className="w-6 h-6 bg-primary rounded flex items-center justify-center">
              <span className="text-black text-xs">H</span>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Dashboard;